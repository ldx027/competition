#include <iostream>
#include <vector>
#include <string>
#include <cmath>
#include <algorithm>
using namespace std;

bool num1[10][7][7] =
{
    {
        {1, 1, 1, 1, 1, 1, 1, },
        {1, 0, 0, 0, 0, 0, 1, },
        {1, 0, 0, 0, 0, 0, 1, },
        {1, 0, 0, 0, 0, 0, 1, },
        {1, 0, 0, 0, 0, 0, 1, },
        {1, 0, 0, 0, 0, 0, 1, },
        {1, 1, 1, 1, 1, 1, 1, },
    },
    {
        {0, 0, 0, 0, 0, 0, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
    },
    {
        {1, 1, 1, 1, 1, 1, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {1, 1, 1, 1, 1, 1, 1, },
        {1, 0, 0, 0, 0, 0, 0, },
        {1, 0, 0, 0, 0, 0, 0, },
        {1, 1, 1, 1, 1, 1, 1, },
    },
    {
        {1, 1, 1, 1, 1, 1, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {1, 1, 1, 1, 1, 1, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {1, 1, 1, 1, 1, 1, 1, },
    },
    {
        {1, 0, 0, 0, 0, 0, 1, },
        {1, 0, 0, 0, 0, 0, 1, },
        {1, 0, 0, 0, 0, 0, 1, },
        {1, 1, 1, 1, 1, 1, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
    },
    {
        {1, 1, 1, 1, 1, 1, 1, },
        {1, 0, 0, 0, 0, 0, 0, },
        {1, 0, 0, 0, 0, 0, 0, },
        {1, 1, 1, 1, 1, 1, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {1, 1, 1, 1, 1, 1, 1, },
    },
    {
        {1, 1, 1, 1, 1, 1, 1, },
        {1, 0, 0, 0, 0, 0, 0, },
        {1, 0, 0, 0, 0, 0, 0, },
        {1, 1, 1, 1, 1, 1, 1, },
        {1, 0, 0, 0, 0, 0, 1, },
        {1, 0, 0, 0, 0, 0, 1, },
        {1, 1, 1, 1, 1, 1, 1, },
    },
    {
        {1, 1, 1, 1, 1, 1, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
    },
    {
        {1, 1, 1, 1, 1, 1, 1, },
        {1, 0, 0, 0, 0, 0, 1, },
        {1, 0, 0, 0, 0, 0, 1, },
        {1, 1, 1, 1, 1, 1, 1, },
        {1, 0, 0, 0, 0, 0, 1, },
        {1, 0, 0, 0, 0, 0, 1, },
        {1, 1, 1, 1, 1, 1, 1, },
    },
    {
        {1, 1, 1, 1, 1, 1, 1, },
        {1, 0, 0, 0, 0, 0, 1, },
        {1, 0, 0, 0, 0, 0, 1, },
        {1, 1, 1, 1, 1, 1, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {0, 0, 0, 0, 0, 0, 1, },
        {1, 1, 1, 1, 1, 1, 1, },
    },
};

bool num2[10][5][5] =
    {
        {
            {1, 1, 1, 1, 1},
            {1, 0, 0, 0, 1},
            {1, 0, 0, 0, 1},
            {1, 0, 0, 0, 1},
            {1, 1, 1, 1, 1},
        },
        {
            {0, 0, 0, 0, 1},
            {0, 0, 0, 0, 1},
            {0, 0, 0, 0, 1},
            {0, 0, 0, 0, 1},
            {0, 0, 0, 0, 1},
        },
        {
            {1, 1, 1, 1, 1},
            {0, 0, 0, 0, 1},
            {1, 1, 1, 1, 1},
            {1, 0, 0, 0, 0},
            {1, 1, 1, 1, 1},
        },
        {
            {1, 1, 1, 1, 1},
            {0, 0, 0, 0, 1},
            {1, 1, 1, 1, 1},
            {0, 0, 0, 0, 1},
            {1, 1, 1, 1, 1},
        },
        {
            {1, 0, 0, 0, 1},
            {1, 0, 0, 0, 1},
            {1, 1, 1, 1, 1},
            {0, 0, 0, 0, 1},
            {0, 0, 0, 0, 1},
        },
        {
            {1, 1, 1, 1, 1},
            {1, 0, 0, 0, 0},
            {1, 1, 1, 1, 1},
            {0, 0, 0, 0, 1},
            {1, 1, 1, 1, 1},
        },
        {
            {1, 1, 1, 1, 1},
            {1, 0, 0, 0, 0},
            {1, 1, 1, 1, 1},
            {1, 0, 0, 0, 1},
            {1, 1, 1, 1, 1},
        },
        {
            {1, 1, 1, 1, 1},
            {0, 0, 0, 0, 1},
            {0, 0, 0, 0, 1},
            {0, 0, 0, 0, 1},
            {0, 0, 0, 0, 1},
        },
        {
            {1, 1, 1, 1, 1},
            {1, 0, 0, 0, 1},
            {1, 1, 1, 1, 1},
            {1, 0, 0, 0, 1},
            {1, 1, 1, 1, 1},
        },
        {
            {1, 1, 1, 1, 1},
            {1, 0, 0, 0, 1},
            {1, 1, 1, 1, 1},
            {0, 0, 0, 0, 1},
            {1, 1, 1, 1, 1},
        },
};

bool INF[10][25] = 
{
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
    {0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, },
    {0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, },
    {0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, },
    {0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, },
    {0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, },
    {0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, },
    {0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, },
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
};

void show(string x, string y, string z)
{
    for (int i = 0; i < 10; i++)
    {
        // big num
        for (int j = 0; j < x.size(); j++)
        {
            cout << ".";
            if (i <= 1 || i >= 9)
                cout << ".......";
            else
            {
                for (int u = 0; u < 7; u++)
                {
                    if (num1[x[j] - '0'][i - 2][u])
                    {
                        // cout << x[i];
                        cout << x[j];
                    }
                    else
                        cout << ".";
                }
            }

        }

        //small num
        for (int j = 0; j < y.size(); j++)
        {
            cout << ".";
            if (i <= 0 || i >= 6)
                cout << ".....";
            else
            {
                for (int u = 0; u < 5; u++)
                {
                    if (num2[y[j] - '0'][i - 1][u])
                    {
                        // cout << x[i];
                        cout << y[j];
                    }
                    else
                        cout << ".";
                }
            }
        }

        // equal
        if (i == 4 || i == 6) cout << ".=======";
        else cout << "........";

        // reqult
        if (z == "inf")
        {
            for (int u = 0; u < 8; u++) cout << (INF[i][u] ? 'I' : '.');
            for (int u = 8; u < 16; u++) cout << (INF[i][u] ? 'N' : '.');
            for (int u = 16; u < 24; u++) cout << (INF[i][u] ? 'F' : '.');
        }
        else
        {
        // big num
        for (int j = 0; j < z.size(); j++)
        {
            cout << ".";
            if (i <= 1 || i >= 9)
                cout << ".......";
            else
            {
                for (int u = 0; u < 7; u++)
                {
                    if (num1[z[j] - '0'][i - 2][u])
                    {
                        // cout << x[i];
                        cout << z[j];
                    }
                    else
                        cout << ".";
                }
            }

        }
        }

        cout << ".\n";
    }
}

string change(long long x)
{
    string temp, rst;
    while (x > 0) temp += (x % 10) + '0', x /= 10;

    for (auto it = temp.rbegin(); it != temp.rend(); it++)
        rst += *it;

    return rst;
}

int main()
{
    int T;
    cin >> T;

    string str;
    double x, y, z;
    while (T--)
    {
        cin >> str;
        int idx = 0;
        x = 0, y = 0;

        while (str[idx] != '^')
        {
            x *= 10;
            x += str[idx++] - '0';
        }
        idx += 2;
        while (str[idx] != '}')
        {
            y *= 10;
            y += str[idx++] - '0';
        }

        z = pow(x, y);
        cout << 1e1 << endl;
        if (z <= 1e19)
            show(change(x), change(y), change(z));
        else 
            show(change(x), change(y), "inf");
    }


    return 0;
}